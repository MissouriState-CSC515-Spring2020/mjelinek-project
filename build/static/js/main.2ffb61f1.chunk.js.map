{"version":3,"sources":["components/gallery.js","components/recents.js","components/details.js","serviceWorker.js","index.js","App.js"],"names":["Gallery","props","state","results","url","isLoaded","fetch","then","response","json","result","setState","items","catch","err","console","log","this","error","document","title","Container","align","Row","Col","xs","md","lg","href","className","map","item","key","id","src","videoId","React","Component","Recents","Details","Card","style","width","Body","Title","snippet","ListGroup","ListGroupItem","description","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","Nav","backgroundColor","Link","color","fontWeight","exact","path","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2ffb61f1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tContainer,\n\tCol,\n\tRow\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Gallery extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tresults: [],\n\t\t\turl: [],\n\t\t\tisLoaded: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\n\t\t\t'https://www.googleapis.com/youtube/v3/search?part=id&q=lastweektonight&type=video&maxResults=15&order=date&key=AIzaSyAAN7bkXlpi5pqkVlJaXVmciwrNYN1RdSY'\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((result) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\tresults: result.items,\n\t\t\t\t\turl: 'https://www.youtube.com/embed/',\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst { error, isLoaded, results, url } = this.state;\n\n\t\tif (error) {\n\t\t\treturn <div>Error in loading</div>;\n\t\t} else if (!isLoaded) {\n\t\t\treturn <div>Loading ...</div>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t(document.title = 'Search Results'),\n\t\t\t\t(\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t<h1 align=\"center\">Last Week Tonight</h1>\n\t\t\t\t</div>\n\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs={6} md={4} lg={3}>\n\t\t\t\t\t\t\t\t<a href=\"/details\">\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t{results.map((item) => (\n\t\t\t\t\t\t\t\t\t\t\t<div key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col s3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"myFrame\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url + item.id.videoId}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Gallery;\n","import React from 'react';\r\nimport {\r\n\tContainer,\r\n\tCol,\r\n\tRow\r\n} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Recents extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tresults: [],\r\n\t\t\turl: [],\r\n\t\t\tisLoaded: false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\r\n\t\t\t'https://www.googleapis.com/youtube/v3/search?part=id&q=lastweektonight&type=video&maxResults=6&order=date&key=AIzaSyAAN7bkXlpi5pqkVlJaXVmciwrNYN1RdSY'\r\n\t\t)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\tresults: result.items,\r\n\t\t\t\t\turl: 'https://www.youtube.com/embed/',\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error, isLoaded, results, url } = this.state;\r\n\r\n\t\tif (error) {\r\n\t\t\treturn <div>Error in loading</div>;\r\n\t\t} else if (!isLoaded) {\r\n\t\t\treturn <div>Loading ...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t(document.title = 'Most Recent Videos'),\r\n\t\t\t\t(\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h1 align=\"center\">Recent Videos</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col xs={12} md={6} lg={4}>\r\n\t\t\t\t\t\t\t\t<a href=\"/details\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t{results.map((item) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col s3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"myFrame\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={url + item.id.videoId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t></iframe>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default Recents;\r\n","import React from 'react';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Details extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tresults: [],\r\n\t\t\turl: [],\r\n\t\t\tisLoaded: false,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch(\r\n\t\t\t'https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=UnSILVWDKL8&key=AIzaSyAAN7bkXlpi5pqkVlJaXVmciwrNYN1RdSY'\r\n\t\t)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoaded: true,\r\n\t\t\t\t\tresults: result.items,\r\n\t\t\t\t\turl: 'https://www.youtube.com/embed/',\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error, isLoaded, results, url } = this.state;\r\n\r\n\t\tif (error) {\r\n\t\t\treturn <div>Error in loading</div>;\r\n\t\t} else if (!isLoaded) {\r\n\t\t\treturn <div>Loading ...</div>;\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t(document.title = 'Video Details'),\r\n\t\t\t\t(\r\n\t\t\t\t\t<Card style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t{results.map((item) => (\r\n\t\t\t\t\t\t\t\t<div key={item.id}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col s3\">\r\n\t\t\t\t\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"myFrame\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc={url + item.id}\r\n\t\t\t\t\t\t\t\t\t\t></iframe>\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{item.snippet.title}</Card.Title>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup className=\"list-group-flush\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription: {item.snippet.description}\r\n\t\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default Details;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Gallery from \"./components/gallery\";\nimport Recents from \"./components/recents\";\nimport Details from \"./components/details\";\nimport {Nav} from \"react-bootstrap\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Nav\n        className=\"navbar navbar-expand-lg navbar-dark navbar-full\"\n        style={{ backgroundColor: \"#d3d3d3\" }}\n      >\n        <Nav.Link href=\"/\" style={{ color: \"black\", fontWeight: \"bold\" }}>\n          Last Week Tonight\n        </Nav.Link>\n\n        <Nav.Link\n          href=\"/recents\"\n          style={{ color: \"black\", fontWeight: \"bold\" }}\n        >\n          Recent Videos\n        </Nav.Link>\n\n\t\t<Nav.Link\n          href=\"/details\"\n          style={{ color: \"black\", fontWeight: \"bold\" }}\n        >\n          Video Details\n        </Nav.Link>\n\n\n      </Nav>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Gallery />\n        </Route>\n        <Route path=\"/recents\">\n          <Recents />\n        </Route>\n        <Route path=\"/details\">\n          <Details />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}"],"sourceRoot":""}